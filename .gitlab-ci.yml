image: gableroux/unity3d:2019.3.8f1

stages:
  - build
  # - test

variables:
  BUILD_NAME: CoronaDefense
  UNITY_DEC_KEY: r=7mD6hjaE%L3*ZX%!K!@-CEduKtzx

build-job:
  stage: build
  script:
    # Install zip
    - apt-get update
    - apt-get install zip -y

    # Decrypt the license file
    - openssl aes-256-cbc -d -in ./Unity_v2019.x.ulf.enc -k $UNITY_DEC_KEY >> ./Unity_v2019.x.ulf
    
    # Activate unity
    - /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile ./Unity_v2019.x.ulf || exit 0

    # Build Windows and OSX
    - /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath ./MC426 -buildWindows64Player ./bin-win64/$BUILD_NAME.exe
    - /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath ./MC426 -buildOSXUniversalPlayer ./bin-osx/$BUILD_NAME.app
    - /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath ./MC426 -buildLinux64Player ./bin-linux64/$BUILD_NAME

    # Zip builds
    - zip -r ${BUILD_NAME}Win64Binary.zip ./bin-win64
    - zip -r ${BUILD_NAME}OSXBinary.zip ./bin-osx
    - zip -r ${BUILD_NAME}Linux64Binary.zip ./bin-linux64

  # Store builds
  artifacts:
    paths:
      - ./${BUILD_NAME}Win64Binary.zip
      - ./${BUILD_NAME}OSXBinary.zip
      - ./${BUILD_NAME}Linux64Binary.zip

  tags:
      - gitlab-org
